перша спроба вийшла не дуже вдачною. проблема - мала кількість зображень для навчання
збільшив кількість

друга спроба краща, мережа демонструє 70% accuracy

третя спроба: збільшив кількість епох навчання із 30 до 50
результат: accuracy 87%
але більше 40епох не варто навчати, можливе перенавчання
все ще варто збільшити кількість зображень в датасеті

почав дослідження найкращї бібліотеки для захоплення екрану
- pyautogui
    середінй час для 1го скріншоту 0.05 сек (~20 FPS) при будь-якому розширенні
    проблема pyautogui в тому що вона робить скріншот 
    всього екрану зразу, а після того вже його обрізають
- mss
    в розширенні (600x500)
    середінй час для 1го скріншоту 0.02 сек (50+-5 FPS)
    avg FPS для циклу: ~52,
    mss робить скрін в попередньо заданій області, що дозволяє збільшити 
    кількість кадрів в сек при меншій області захолення

(наступний код злегка сповільює роботу:
if cv2.waitKey(1) & 0xFF == ord("q"):
    cv2.destroyAllWindows()
    break
значення waitKey потрібно задавати 1 для найкращого fps)

- mss Multiprocessing
    в розширенні (600x500)
    avg FPS для циклу: ~45-52
